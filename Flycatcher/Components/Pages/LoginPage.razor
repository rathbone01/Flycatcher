@inject UserService userService
@inject NavigationManager NavigationManager

<MudContainer Class="d-flex justify-center align-center" Style="margin-top: 10vh;">
    <br />
    <MudImage Fluid="false" ObjectFit="ObjectFit.ScaleDown" ObjectPosition="ObjectPosition.Center" Src="images/mascot_small.png" />
    <MudText Typo="Typo.h2">flycatcher.chat</MudText>
</MudContainer>
<MudContainer Class="d-flex justify-center align-center" Style="height: 30vh;">
    <MudCard Style="width: 400px;">
        <MudCardContent>
            <MudTextField Label="Username" @bind-Value="username" />
            <MudTextField Label="Password" @bind-Value="password" InputType="InputType.Password" />
        </MudCardContent>
        <MudCardActions Class="d-flex justify-end">
            <MudButton Variant="Variant.Text" Color="Color.Default" OnClick="Login">Login</MudButton>
        </MudCardActions>
    </MudCard>
</MudContainer>

<MudContainer Class="d-flex justify-center align-center">
    <div>
        @if (errorMessage != string.Empty)
        {
            <MudAlert Style="width: 400px;" Severity="Severity.Error">@errorMessage</MudAlert>
        }
    </div>
</MudContainer>

<div style="text-align: center; align-content: center;">
    <MudLink Href="/register">Don't have an account? Register here</MudLink>
</div>


@code {
    [Parameter]
    public EventCallback<int> OnLogin { get; set; }

    string errorMessage = string.Empty;
    private string username = string.Empty;
    private string password = string.Empty;

    private void Login()
    {
        var hashedPassword = HashClass.Hash(password);
        var result = userService.Login(username, hashedPassword);
        if (result.Success && result.UserId is not null)
        {
            errorMessage = string.Empty;
            OnLogin.InvokeAsync((int)result.UserId);
        }
        else
        {
            errorMessage = result.ErrorMessage ?? "Unknown Error Occured";
        }
    }
}
